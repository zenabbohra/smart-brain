{"version":3,"sources":["components/Navigation/Navigation.js","components/Logo/Logo.js","components/ImageUrlInput/ImageUrlInput.js","components/Facerecognition/FaceRecognition.js","components/Signin/Signin.js","components/Register/Register.js","components/Entry/Entry.js","containers/App.js","serviceWorker.js","index.js"],"names":["Navigation","onPageChange","isSignedIn","style","display","justifyContent","onClick","className","Logo","options","max","height","width","alt","src","ImageUrlInput","onInputChange","onButtonClick","imageInputError","borderOpacity","borderColor","type","placeholder","onChange","FaceRecognition","imageUrl","box","id","length","map","item","i","key","top","topRow","left","leftCol","bottom","bottomRow","right","rightCol","Signin","props","onEmailInputChange","event","setState","signInEmail","target","value","onPasswordInputChange","signInPassword","onSignInButtonClick","loadUser","state","loading","signInError","fetch","method","headers","body","JSON","stringify","email","password","then","response","json","user","error","console","log","catch","err","this","htmlFor","name","disabled","Component","Register","onNameInputChange","registerName","registerEmail","registerPassword","onRegisterClick","registerError","Entry","entries","app","Clarifai","App","apiKey","particleOptions","config","calculateFaceDim","data","arrOfRegions","image","document","getElementById","Number","outputs","regions","faceRegion","push","region_info","bounding_box","left_col","top_row","right_col","bottom_row","displayFaceBox","boundingBox","input","models","predict","FACE_DETECT_MODEL","count","Object","assign","page","joined","joined_date","Date","params","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","URL","process","href","origin","addEventListener","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c0bffbe6.chunk.js","sourcesContent":["import React from 'react';\n\nconst Navigation = ({onPageChange, isSignedIn}) => {\n  if (isSignedIn) {\n    return <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\n      <p onClick={() => onPageChange('sign out')} className='underline pa3 f3 dim pointer link'>Sign Out</p>\n    </nav>;\n  }else {\n    return <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\n      <p onClick={() => onPageChange('sign in')} className='underline pa3 f3 dim pointer link'>Sign In</p>\n      <p onClick={() => onPageChange('register')} className='underline pa3 f3 dim pointer link'>Register</p>\n    </nav>;\n  }\n};\n\nexport default Navigation;","import React from 'react';\nimport Tilt from 'react-tilt';\nimport './Logo.css';\n\nconst Logo = () => {\n  return (\n    <div className=' ma4 mt0'>\n      <Tilt className=\"Tilt br2 shadow-2\" options={{max: 65}} style={{height: 150, width: 150}}>\n        <div className=\"Tilt-inner pa3\">\n          <img\n            alt=''\n            src=\"brainLogo.png\"\n            style={{height: 120, width: 120}}\n          />\n        </div>\n      </Tilt>\n    </div>\n  );\n};\n\nexport default Logo;","import React from 'react';\n\nconst ImageUrlInput = ({ onInputChange, onButtonClick, imageInputError }) => {\n  return(\n    <div className='tc'>\n      <p className='f4'>This Magic Brain will detect faces in your pictures. Git it a try. </p>\n      <input\n        className='pa1 w-30-l shadow-5 bw1 bw2'\n        style={{borderOpacity:'1', borderColor:'#f7f3f300'}}\n        type='text'\n        placeholder='Insert an image url here (preferably a face)'\n        onChange={onInputChange}\n      />\n      <button\n        className=\"f6 link dim ph3 pv2 mb2 dib white bg-light-purple\"\n        onClick={onButtonClick}\n      >Detect</button>\n      <p className=\"tc lh-copy mt3\">{imageInputError}</p>\n    </div>\n  );\n};\n\nexport default ImageUrlInput;","import React from 'react';\nimport './FaceRecognition.css';\n\nconst FaceRecognition = ({ imageUrl, box }) => {\n  return(\n    <div className='center'>\n      <div className='mt2 tc' style={{'position':\"relative\"}}>\n\n        <img\n          alt=''\n          id='inputimage'\n          src={imageUrl}\n          width='500px' height='auto'\n        />\n        {box.length\n          ? box.map((item, i) => {\n            return (\n              <div\n                key={i}\n                className=\"bounding-box\"\n                style={{\n                  top: item.topRow,\n                  left: item.leftCol,\n                  bottom: item.bottomRow,\n                  right: item.rightCol\n                }}\n              />\n            )\n          }): ''\n        }\n      </div>\n    </div>\n  );\n};\n\nexport default FaceRecognition;","import React, {Component} from 'react';\n\nclass Signin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      signInEmail: '',\n      signInPassword: '',\n      loading: false,\n      signInError: null\n    }\n  }\n\n  onEmailInputChange = (event) => {\n    this.setState({signInEmail: event.target.value});\n  };\n\n  onPasswordInputChange = (event) => {\n    this.setState({signInPassword: event.target.value});\n  };\n\n  // showLoading = (bool) => {\n  //   this.setState({loading: bool});\n  //   console.log('loading', this.state.loading);\n  // };\n\n  onSignInButtonClick = () => {\n    const {onPageChange, loadUser} = this.props;\n    const {signInEmail, signInPassword} = this.state;\n    this.setState({loading: true, signInError: null});\n\n    fetch('https://face-detect-zenab.herokuapp.com/signin', {\n      method: 'POST',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({\n        email: signInEmail,\n        password: signInPassword\n      })\n    })\n      .then(response => response.json())\n      .then(user => {\n        if (user.id) {\n          loadUser(user);\n          onPageChange('home');\n        } else {\n          const error = user;\n          console.log(error);\n          this.setState({signInError: error, loading: false});\n        }\n      })\n      .catch(err => {\n        console.log('err',err);\n        this.setState({signInError: 'Unexpected error, please try again', loading: false});\n      });\n  };\n\n  render() {\n    const {onEmailInputChange, onPasswordInputChange, state: {loading, signInError}} = this;\n    return (\n      <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\" style={{\"marginTop\": '8rem'}}>\n        <main className=\"pa4 black-80\">\n          <div className=\"measure\">\n            <legend className=\"center f4 fw6 ph0 mh0\">Sign In</legend>\n            <div className=\"mt3\">\n              <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\n              <input\n                className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                type=\"email\"\n                name=\"email-address\"\n                id=\"email-address\"\n                onChange={onEmailInputChange}\n              />\n            </div>\n            <div className=\"mv3\">\n              <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n              <input\n                className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                type=\"password\"\n                name=\"password\"\n                id=\"password\"\n                onChange={onPasswordInputChange}\n              />\n            </div>\n            <div className=\"tc\">\n              <input\n                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\n                type=\"submit\"\n                value={loading ? \"Signing in\" : \"Sign in\"}\n                disabled={loading}\n                onClick={this.onSignInButtonClick}\n              />\n            </div>\n            <div className=\"tc lh-copy mt3\">\n              <p onClick={() => this.props.onPageChange('register')} className=\"f6 link dim black db\">Register</p>\n            </div>\n            <p className=\"tc lh-copy mt3\">{signInError}</p>\n          </div>\n        </main>\n      </article>\n    );\n  }\n}\n\nexport default Signin;","import React, {Component} from 'react';\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n    this.state ={\n      registerName: '',\n      registerEmail: '',\n      registerPassword: '',\n      loading: false,\n      registerError: null\n    }\n}\n\n  onNameInputChange = (event) => {\n    this.setState({registerName: event.target.value});\n  };\n\n  onEmailInputChange = (event) => {\n    this.setState({registerEmail: event.target.value});\n  };\n\n  onPasswordInputChange = (event) => {\n    this.setState({registerPassword: event.target.value});\n  };\n\n  onRegisterClick = () => {\n    const { onPageChange, loadUser } = this.props;\n    const { registerName, registerEmail, registerPassword } = this.state;\n    this.setState({loading: true, registerError: null });\n\n    fetch('https://face-detect-zenab.herokuapp.com/register', {\n      method: 'POST',\n      headers: {'Content-Type':'application/json'},\n      body:JSON.stringify({\n        name: registerName,\n        email: registerEmail,\n        password: registerPassword\n      })\n    })\n      .then(response => response.json())\n      .then(user => {\n        if(user.id){\n          onPageChange('home');\n          loadUser(user);\n        }else{\n          const error = user;\n          this.setState({loading: false, registerError: error.err});\n        }\n      })\n      .catch((err) => {\n        console.log(\"err\", err);\n        this.setState({loading: false, registerError: 'Unexpected error occurred, try again'});\n      })\n      };\n\n  render() {\n    const { onNameInputChange, onEmailInputChange, onPasswordInputChange, state: { loading, registerError } } = this;\n    return(\n      <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\" style={{\"marginTop\": '8rem'}}>\n        <main className=\"pa4 black-80\">\n          <div className=\"measure\">\n            <legend className=\"center f4 fw6 ph0 mh0\">Register</legend>\n            <div className=\"mt3\">\n              <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Name</label>\n              <input\n                className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                type=\"name\"\n                name=\"name\"\n                id=\"name\"\n                onChange={onNameInputChange}\n              />\n            </div>\n            <div className=\"mt3\">\n              <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\n              <input\n                className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                type=\"email\"\n                name=\"email-address\"\n                id=\"email-address\"\n                onChange={onEmailInputChange}\n              />\n            </div>\n            <div className=\"mv3\">\n              <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n              <input\n                className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                type=\"password\"\n                name=\"password\"\n                id=\"password\"\n                onChange={onPasswordInputChange}\n              />\n            </div>\n            <div className=\"tc\">\n            </div>\n            <div className=\"tc lh-copy mt3\">\n              <input\n                type='submit'\n                value={loading ? 'Creating account' : 'Register'}\n                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\n                disabled={loading}\n                onClick={this.onRegisterClick}\n              />\n            </div>\n            <p className=\"tc lh-copy mt3\">{registerError}</p>\n          </div>\n        </main>\n      </article>\n    );\n  }\n}\n\nexport default Register;","import React from 'react';\n\nconst Entry = ({ name, entries }) => {\n  return(\n    <div className='f4'>\n      <p className='center i'>{`${name}, your entry count is `}</p>\n      <p className='f3 tc'>{`${entries}`}</p>\n    </div>\n  );\n};\n\nexport default Entry;","import React, {Component} from 'react';\nimport './App.css';\nimport 'tachyons';\nimport Navigation from '../components/Navigation/Navigation';\nimport Logo from '../components/Logo/Logo';\nimport ImageUrlInput from '../components/ImageUrlInput/ImageUrlInput';\nimport FaceRecognition from '../components/Facerecognition/FaceRecognition';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport Signin from '../components/Signin/Signin';\nimport Register from '../components/Register/Register';\nimport Entry from '../components/Entry/Entry';\nimport config from './particlesjs-config';\n\nconst app = new Clarifai.App({\n  apiKey: 'de40d02dd82d4e4b826194bf1a7dfe20'\n});\n\nconst particleOptions = config;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      imageUrl: '',\n      input: '',\n      box: [],\n      isSignedIn: false,\n      page: 'sign in',\n      imageInputError: null,\n      user: {\n        name: '',\n        signInEmail: '',\n        signInPassword: '',\n        entries: 0,\n        joined_date: new Date()\n      }\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://face-detect-zenab.herokuapp.com/');\n  }\n\n  calculateFaceDim = (data) => {\n    let arrOfRegions = [];\n    const image = document.getElementById(\"inputimage\");\n    const width = Number(image.width);\n    const height = Number(image.height);\n    for (let faceRegion of data.outputs[0].data.regions) {\n      arrOfRegions.push({\n        leftCol: faceRegion.region_info.bounding_box.left_col * width,\n        topRow: faceRegion.region_info.bounding_box.top_row * height,\n        rightCol: width - faceRegion.region_info.bounding_box.right_col * width,\n        bottomRow: height - faceRegion.region_info.bounding_box.bottom_row * height,\n      })\n    }\n    return arrOfRegions;\n  };\n\n  displayFaceBox = (boundingBox) => {\n    this.setState({box: boundingBox});\n  };\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value})\n  };\n\n  onButtonClick = () => {\n    this.setState({imageUrl: this.state.input, imageInputError: null});\n\n    if(this.state.input){\n      //detecting the face using clarifai API\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input)\n        .then(response => {\n          const boundingBox = this.calculateFaceDim(response);\n          this.displayFaceBox(boundingBox);\n          return boundingBox;\n        })\n        .then(boundingBox => {\n          if(boundingBox) {\n            this.setState({imageInputError: ''});\n            //Updating the entry count each time the button is clicked\n            fetch('https://face-detect-zenab.herokuapp.com/image', {\n              method: 'PUT',\n              headers: {'Content-Type': 'application/json'},\n              body: JSON.stringify({\n                id: this.state.user.id\n              })\n            })\n              .then(response => response.json())\n              .then(count => {\n                this.setState(Object.assign(this.state.user, {entries: count}))\n              })\n              .catch(err => console.log('entry count error', err))\n          }\n          else console.log('no box dimension returned');\n        })\n        .catch(err => {\n            this.setState({imageInputError : 'Bad image url provided', box: ''});\n            console.log('Bad image url provided', err);\n        });\n    } else{\n      this.setState({imageInputError: 'No image url provided', box: ''})\n    }\n  };\n\n  onPageChange = (page) => {\n    console.log('page', page);\n    if (page === 'sign out') {\n      this.setState({isSignedIn: false});\n    } else if (page === 'home') {\n      this.setState({isSignedIn: true});\n    }\n    this.setState({page: page});\n  };\n\n  loadUser = (data) => {\n    const {id, name, email, password, entries, joined} = data;\n    this.setState({\n      user: {\n        id: id,\n        name: name,\n        email: email,\n        signInPassword: password,\n        entries: entries,\n        joined: joined\n      }, imageUrl: ''\n    });\n  };\n\n\n  render() {\n    const {imageUrl, box, isSignedIn, page, user, imageInputError} = this.state;\n    const {onPageChange, loadUser, onButtonClick, onInputChange} = this;\n    return <div>\n      <Particles className='particles' params={particleOptions}/>\n      <Navigation onPageChange={onPageChange} isSignedIn={isSignedIn}/>\n      {!isSignedIn && (page === 'sign out' || page === 'sign in') ?\n        <Signin onPageChange={onPageChange} loadUser={loadUser}/>\n        : !isSignedIn && page === 'register' ?\n        <Register onPageChange={onPageChange} loadUser={loadUser} /> :\n        <div>\n          <Logo/>\n          <Entry name={user.name} entries={user.entries}/>\n          <ImageUrlInput onInputChange={onInputChange} onButtonClick={onButtonClick} imageInputError={imageInputError}/>\n          <FaceRecognition imageUrl={imageUrl} box={box}/>\n        </div>\n      }\n    </div>;\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}