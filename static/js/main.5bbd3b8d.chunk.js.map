{"version":3,"sources":["components/Navigation/Navigation.js","components/Logo/Logo.js","components/ImageUrlInput/ImageUrlInput.js","components/Facerecognition/FaceRecognition.js","components/Signin/Signin.js","components/Register/Register.js","components/Entry/Entry.js","containers/App.js","serviceWorker.js","index.js"],"names":["Navigation","onPageChange","isSignedIn","style","display","justifyContent","onClick","className","Logo","options","max","height","width","alt","src","ImageUrlInput","onInputChange","onButtonClick","borderOpacity","borderColor","type","placeholder","onChange","FaceRecognition","imageUrl","box","id","length","map","item","i","key","top","topRow","left","leftCol","bottom","bottomRow","right","rightCol","Signin","props","onEmailInputChange","event","setState","signInEmail","target","value","onPasswordInputChange","signInPassword","onSigninButtonClick","loadUser","state","fetch","method","headers","body","JSON","stringify","email","password","then","response","json","user","catch","err","console","log","this","htmlFor","name","Component","Register","onNameInputChange","registerName","registerEmail","registerPassword","onRegisterClick","status","Entry","entries","app","Clarifai","App","apiKey","particleOptions","config","calculateFaceDim","data","arrOfRegions","image","document","getElementById","Number","outputs","regions","faceRegion","push","region_info","bounding_box","left_col","top_row","right_col","bottom_row","displayFaceBox","boundingBox","input","models","predict","FACE_DETECT_MODEL","count","Object","assign","page","joined","joined_date","Date","params","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","ReactDOM","render","URL","process","href","origin","addEventListener","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.5bbd3b8d.chunk.js","sourcesContent":["import React from 'react';\n\nconst Navigation = ({onPageChange, isSignedIn}) => {\n  if (isSignedIn) {\n    return <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\n      <p onClick={() => onPageChange('sign out')} className='underline pa3 f3 dim pointer link'>Sign Out</p>\n    </nav>;\n  }else {\n    return <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\n      <p onClick={() => onPageChange('sign in')} className='underline pa3 f3 dim pointer link'>Sign In</p>\n      <p onClick={() => onPageChange('register')} className='underline pa3 f3 dim pointer link'>Register</p>\n    </nav>;\n  }\n};\n\nexport default Navigation;","import React from 'react';\nimport Tilt from 'react-tilt';\nimport './Logo.css';\n\nconst Logo = () => {\n  return (\n    <div className=' ma4 mt0'>\n      <Tilt className=\"Tilt br2 shadow-2\" options={{max: 65}} style={{height: 150, width: 150}}>\n        <div className=\"Tilt-inner pa3\">\n          <img\n            alt=''\n            src=\"brainLogo.png\"\n            style={{height: 120, width: 120}}\n          />\n        </div>\n      </Tilt>\n    </div>\n  );\n};\n\nexport default Logo;","import React from 'react';\n\nconst ImageUrlInput = ({ onInputChange, onButtonClick }) => {\n  return(\n    <div className='tc'>\n      <p className='f4'>This Magic Brain will detect faces in your pictures. Git it a try. </p>\n      <input\n        className='pa1 w-30-l shadow-5 bw1 bw2'\n        style={{borderOpacity:'1', borderColor:'#f7f3f300'}}\n        type='text'\n        placeholder='Insert an image url here (preferably a face)'\n        onChange={onInputChange}\n      />\n      <button\n        className=\"f6 link dim ph3 pv2 mb2 dib white bg-light-purple\"\n        onClick={onButtonClick}\n      >Detect</button>\n    </div>\n  );\n};\n\nexport default ImageUrlInput;","import React from 'react';\nimport './FaceRecognition.css';\n\nconst FaceRecognition = ({ imageUrl, box }) => {\n  // const { topRow, rightCol, bottomRow, leftCol } = box;\n\n  return(\n    <div className='center'>\n      <div className='mt2 tc' style={{'position':\"relative\"}}>\n\n        <img\n          alt=''\n          id='inputimage'\n          src={imageUrl}\n          width='500px' height='auto'\n        />\n        {box.length\n          ? box.map((item, i) => {\n            return (\n              <div\n                key={i}\n                className=\"bounding-box\"\n                style={{\n                  top: item.topRow,\n                  left: item.leftCol,\n                  bottom: item.bottomRow,\n                  right: item.rightCol\n                }}\n              />\n            )\n          })\n          : ''}\n      </div>\n    </div>\n  );\n};\n\nexport default FaceRecognition;","import React, { Component } from 'react';\n\nclass Signin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      signInEmail: '',\n      signInPassword: ''\n    }\n  }\n\n  onEmailInputChange = (event) => {\n    this.setState({signInEmail: event.target.value});\n  };\n\n  onPasswordInputChange = (event) => {\n    this.setState({signInPassword: event.target.value});\n  };\n\n  onSigninButtonClick = () => {\n    const { onPageChange, loadUser } = this.props;\n    const { signInEmail, signInPassword } = this.state;\n\n    fetch('https://face-detect-zenab.herokuapp.com/signin', {\n      method: 'POST',\n      headers: {'Content-Type' : 'application/json'},\n      body: JSON.stringify({\n        email: signInEmail,\n        password: signInPassword\n      })\n    })\n      .then(response => response.json())\n      .then(user => {\n        if(user.id){\n          loadUser(user);\n          onPageChange('home');\n        }\n      })\n      .catch(err => console.log(err));\n\n  };\n\n  render() {\n    const { onEmailInputChange, onPasswordInputChange } = this;\n\n    return (\n      <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\" style={{\"marginTop\": '8rem'}}>\n        <main className=\"pa4 black-80\">\n          <div className=\"measure\">\n            <legend className=\"center f4 fw6 ph0 mh0\">Sign In</legend>\n            <div className=\"mt3\">\n              <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\n              <input\n                className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                type=\"email\"\n                name=\"email-address\"\n                id=\"email-address\"\n                onChange={onEmailInputChange}\n              />\n            </div>\n            <div className=\"mv3\">\n              <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n              <input\n                className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                type=\"password\"\n                name=\"password\"\n                id=\"password\"\n                onChange={onPasswordInputChange}\n              />\n            </div>\n            <div className=\"tc\">\n              <input\n                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\n                type=\"submit\"\n                value=\"Sign in\"\n                onClick={this.onSigninButtonClick}\n              />\n            </div>\n            <div className=\"tc lh-copy mt3\">\n              <p onClick={() => this.props.onPageChange('register')} className=\"f6 link dim black db\">Register</p>\n            </div>\n          </div>\n        </main>\n      </article>\n  );\n  }\n}\n\nexport default Signin;","import React, {Component} from 'react';\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n    this.state ={\n      registerName: '',\n      registerEmail: '',\n      registerPassword: ''\n    }\n}\n\n  onNameInputChange = (event) => {\n    this.setState({registerName: event.target.value});\n  };\n\n  onEmailInputChange = (event) => {\n    this.setState({registerEmail: event.target.value});\n  };\n\n  onPasswordInputChange = (event) => {\n    this.setState({registerPassword: event.target.value});\n  };\n\n  onRegisterClick = () => {\n    const { onPageChange, loadUser } = this.props;\n    const { registerName, registerEmail, registerPassword } = this.state;\n    fetch('https://face-detect-zenab.herokuapp.com/register', {\n      method: 'POST',\n      headers: {'Content-Type':'application/json'},\n      body:JSON.stringify({\n        name: registerName,\n        email: registerEmail,\n        password: registerPassword\n      })\n    })\n      .then(response => response.json())\n      .then(user => {\n        if(user.id){\n          onPageChange('home');\n          loadUser(user);\n        }else{\n          user.status(400).json('Incorrect inputs')\n        }\n      })\n      .catch(err=> console.log(\"couldn't register\", err));\n  };\n\n  render() {\n    const { onNameInputChange, onEmailInputChange, onPasswordInputChange } = this;\n\n    return(\n      <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\" style={{\"marginTop\": '8rem'}}>\n        <main className=\"pa4 black-80\">\n          <div className=\"measure\">\n            <legend className=\"center f4 fw6 ph0 mh0\">Register</legend>\n            <div className=\"mt3\">\n              <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Name</label>\n              <input\n                className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                type=\"name\"\n                name=\"name\"\n                id=\"name\"\n                onChange={onNameInputChange}\n              />\n            </div>\n            <div className=\"mt3\">\n              <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\n              <input\n                className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                type=\"email\"\n                name=\"email-address\"\n                id=\"email-address\"\n                onChange={onEmailInputChange}\n              />\n            </div>\n            <div className=\"mv3\">\n              <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n              <input\n                className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                type=\"password\"\n                name=\"password\"\n                id=\"password\"\n                onChange={onPasswordInputChange}\n              />\n            </div>\n            <div className=\"tc\">\n            </div>\n            <div className=\"tc lh-copy mt3\">\n              <input\n                type='submit'\n                value=\"Register\"\n                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\n                onClick={this.onRegisterClick}\n              />\n            </div>\n          </div>\n        </main>\n      </article>\n    );\n  }\n}\n\nexport default Register;","import React from 'react';\n\nconst Entry = ({ name, entries }) => {\n  return(\n    <div className='f4'>\n      <p className='center i'>{`${name}, your entry count is `}</p>\n      <p className='f3 tc'>{`${entries}`}</p>\n    </div>\n  );\n};\n\nexport default Entry;","import React, {Component} from 'react';\nimport './App.css';\nimport 'tachyons';\nimport Navigation from '../components/Navigation/Navigation';\nimport Logo from '../components/Logo/Logo';\nimport ImageUrlInput from '../components/ImageUrlInput/ImageUrlInput';\nimport FaceRecognition from '../components/Facerecognition/FaceRecognition';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport Signin from '../components/Signin/Signin';\nimport Register from '../components/Register/Register';\nimport Entry from '../components/Entry/Entry';\nimport config from './particlesjs-config';\n\nconst app = new Clarifai.App({\n  apiKey: 'de40d02dd82d4e4b826194bf1a7dfe20'\n});\n\nconst particleOptions = config;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      imageUrl: '',\n      input: '',\n      box: [],\n      isSignedIn: false,\n      page: 'sign in',\n      user: {\n        name: '',\n        signInEmail: '',\n        signInPassword: '',\n        entries: 0,\n        joined_date: new Date()\n      }\n    }\n  }\n\n  calculateFaceDim = (data) => {\n    let arrOfRegions = [];\n    const image = document.getElementById(\"inputimage\");\n    const width = Number(image.width);\n    const height = Number(image.height);\n    for (let faceRegion of data.outputs[0].data.regions) {\n      arrOfRegions.push({\n        leftCol: faceRegion.region_info.bounding_box.left_col * width,\n        topRow: faceRegion.region_info.bounding_box.top_row * height,\n        rightCol: width - faceRegion.region_info.bounding_box.right_col * width,\n        bottomRow: height - faceRegion.region_info.bounding_box.bottom_row * height,\n      })\n    }\n\n    return arrOfRegions;\n\n  };\n\n  displayFaceBox = (boundingBox) => {\n    this.setState({box: boundingBox});\n  };\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value})\n  };\n\n  onButtonClick = () => {\n    this.setState({imageUrl: this.state.input});\n\n    //detecting the face using clarifai API\n    app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input)\n      .then(response => {\n        this.displayFaceBox(this.calculateFaceDim(response));\n      })\n      .catch(err => {\n        console.log(err);\n      });\n\n    //Updating the entry count each time the button is clicked\n    fetch('https://face-detect-zenab.herokuapp.com/image', {\n      method: 'PUT',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({\n        id: this.state.user.id\n      })\n    })\n      .then(response => response.json())\n      .then(count => {\n        this.setState(Object.assign(this.state.user, {entries: count}))\n      })\n      .catch(err => console.log(err))\n  };\n\n  onPageChange = (page) => {\n    console.log('page', page);\n    if (page === 'sign out') {\n      this.setState({isSignedIn: false});\n    } else if (page === 'home') {\n      this.setState({isSignedIn: true});\n    }\n    this.setState({page: page});\n  };\n\n  loadUser = (data) => {\n    const {id, name, email, password, entries, joined} = data;\n    this.setState({\n      user: {\n        id: id,\n        name: name,\n        email: email,\n        signInPassword: password,\n        entries: entries,\n        joined: joined\n      }, imageUrl: ''\n    });\n  };\n\n  render() {\n    const {imageUrl, box, isSignedIn, page, user} = this.state;\n    const {onPageChange, loadUser, onButtonClick, onInputChange} = this;\n    return (\n      <div>\n        <Particles className='particles' params={particleOptions}/>\n        <Navigation onPageChange={onPageChange} isSignedIn={isSignedIn}/>\n        {!isSignedIn && (page === 'sign out' || page === 'sign in') ?\n          <Signin onPageChange={onPageChange} loadUser={loadUser}/>\n          : !isSignedIn && page === 'register' ?\n            <Register onPageChange={onPageChange} loadUser={loadUser}/> :\n            <div>\n              <Logo/>\n              <Entry name={user.name} entries={user.entries}/>\n              <ImageUrlInput onInputChange={onInputChange} onButtonClick={onButtonClick}/>\n              <FaceRecognition imageUrl={imageUrl} box={box}/>\n            </div>\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}